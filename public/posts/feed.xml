<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Thomas-Scot Hamilton</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Thomas-Scot Hamilton</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a Kubernetes Operator to Manage GitHub Repositories</title>
      <link>http://localhost:1313/posts/kubernetes/creating-an-operator/</link>
      <pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/kubernetes/creating-an-operator/</guid>
      <description>&lt;p&gt;Kubernetes Operators have transformed the way we manage and extend cloud-native applications by encapsulating operational knowledge directly into the cluster. Traditionally used to handle complex application lifecycle tasks, Operators are increasingly being leveraged to integrate third-party platforms and services directly into the Kubernetes ecosystem. In this post, we’ll explore how you can build a Kubernetes Operator to manage GitHub repositories as first-class Kubernetes resources. More importantly, we’ll discuss the architectural considerations that leave room to expand and manage other GitHub resources (like GitHub Actions, Issues, Pull Requests, or even entire organizations) down the line.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Install GCP Config Connector</title>
      <link>http://localhost:1313/posts/gcp/setting-up-config-connector/</link>
      <pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/gcp/setting-up-config-connector/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;Google Cloud Config Connector (Config Connector) is a Kubernetes add-on that allows you to manage Google Cloud Platform (GCP) resources using Kubernetes-style configuration. By installing Config Connector on your cluster, you can provision and manage GCP services—like Cloud SQL instances, Pub/Sub topics, and Cloud Storage buckets—through standard Kubernetes manifests.&lt;/p&gt;&#xA;&lt;p&gt;In this guide, we’ll walk you through the prerequisites, the installation process, and how to verify a successful installation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;p&gt;Before you begin, ensure you have:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up GitOps Best Practices</title>
      <link>http://localhost:1313/posts/gitops/setting-up-gitops/</link>
      <pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/gitops/setting-up-gitops/</guid>
      <description>&lt;p&gt;GitOps has emerged as a key pattern for continuous delivery and operational management within Kubernetes and other cloud-native environments. By adopting Git as the single source of truth for both application code and infrastructure configurations, teams can achieve more consistent, predictable, and audited workflows. In this guide, we’ll outline the foundational best practices that will help you set up a robust GitOps pipeline, ensure observability and security, and support collaboration across development and operations teams.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Set Up and Use a .github Repository in a GitHub Organization</title>
      <link>http://localhost:1313/posts/github/special-repository/</link>
      <pubDate>Wed, 11 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/github/special-repository/</guid>
      <description>&lt;p&gt;The &lt;code&gt;.github&lt;/code&gt; repository is a powerful and special repository in a GitHub organization. It allows you to manage reusable templates, shared workflows, and organization-wide settings. In this guide, we’ll walk through the steps to set up and leverage a &lt;code&gt;.github&lt;/code&gt; repository to improve your team&amp;rsquo;s efficiency and standardization.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;what-is-a-github-repository&#34;&gt;&lt;strong&gt;What Is a .github Repository?&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;.github&lt;/code&gt; repository is a centralized place where you can define and share:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Community health files&lt;/strong&gt; (e.g., &lt;code&gt;CODE_OF_CONDUCT.md&lt;/code&gt;, &lt;code&gt;CONTRIBUTING.md&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Issue and pull request templates&lt;/strong&gt; for standardizing contributions.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reusable workflows&lt;/strong&gt; for GitHub Actions to streamline CI/CD pipelines.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Organization profile page&lt;/strong&gt; using a &lt;code&gt;README.md&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This repository applies settings and templates across all repositories in your organization unless overridden.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Set Up ArgoCD for Kubernetes Continuous Deployment</title>
      <link>http://localhost:1313/posts/argo/setting-up-argocd/</link>
      <pubDate>Wed, 11 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/argo/setting-up-argocd/</guid>
      <description>&lt;p&gt;ArgoCD is a powerful GitOps tool designed to automate Kubernetes deployments. It provides a declarative approach to continuous deployment, ensuring your Kubernetes clusters are always in sync with your Git repository.&lt;/p&gt;&#xA;&lt;p&gt;In this guide, we’ll walk through setting up ArgoCD in a Kubernetes cluster and deploying a sample application.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Before getting started, ensure you have:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A running &lt;strong&gt;Kubernetes cluster&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;kubectl&lt;/strong&gt; installed and configured to access your cluster.&lt;/li&gt;&#xA;&lt;li&gt;Administrative access to the cluster (for namespace creation and permissions).&lt;/li&gt;&#xA;&lt;li&gt;A &lt;strong&gt;Git repository&lt;/strong&gt; containing Kubernetes manifests or Helm charts.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;step-1-install-argocd&#34;&gt;&lt;strong&gt;Step 1: Install ArgoCD&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Add the &lt;code&gt;argocd&lt;/code&gt; namespace to your Kubernetes cluster:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create namespace argocd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Install ArgoCD using the official manifests:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Verify that the ArgoCD pods are running:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods -n argocd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see pods like argocd-server, argocd-repo-server, argocd-application-controller, and argocd-dex-server in a Running state.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting Up a Kubernetes Cluster on GKE Using Terraform</title>
      <link>http://localhost:1313/posts/terraform/</link>
      <pubDate>Wed, 11 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/terraform/</guid>
      <description>&lt;h1 id=&#34;setting-up-a-kubernetes-cluster-on-gke-using-terraform&#34;&gt;Setting Up a Kubernetes Cluster on GKE Using Terraform&lt;/h1&gt;&#xA;&lt;p&gt;This guide describes how to configure and deploy a Terraform module to set up a GCP network and an autopilot&#xA;private GKE cluster with a structured and reusable design.&lt;/p&gt;&#xA;&lt;h2 id=&#34;repository&#34;&gt;Repository&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/your-username/terraform-gke-cluster&#34;&gt;Terraform GKE Cluster Repository&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone git@github.com:thomasscothamilton/terraform-google-kubernetes-engine.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd terraform-google-kubernetes-engine&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Install Terraform:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Download and install Terraform&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew tap hashicorp/tap&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install hashicorp/tap/terraform&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Verify installation&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;terraform -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Install and Configure Google Cloud SDK:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Download and install Google Cloud SDK&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl https://sdk.cloud.google.com | bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Restart your shell&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exec -l $SHELL&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Initialize the SDK&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Verify installation&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Service Account: Create a service account with the necessary permissions for GKE, Networking, and Storage APIs.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set your project ID&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROJECT_ID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;your-gcp-project-id&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create the service account&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud iam service-accounts create terraform-sa --display-name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Terraform Service Account&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Assign roles to the service account&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud projects add-iam-policy-binding $PROJECT_ID &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --member &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serviceAccount:terraform-sa@&lt;/span&gt;$PROJECT_ID&lt;span style=&#34;color:#e6db74&#34;&gt;.iam.gserviceaccount.com&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --role &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;roles/container.admin&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud projects add-iam-policy-binding $PROJECT_ID &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --member &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serviceAccount:terraform-sa@&lt;/span&gt;$PROJECT_ID&lt;span style=&#34;color:#e6db74&#34;&gt;.iam.gserviceaccount.com&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --role &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;roles/compute.admin&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud projects add-iam-policy-binding $PROJECT_ID &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --member &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;serviceAccount:terraform-sa@&lt;/span&gt;$PROJECT_ID&lt;span style=&#34;color:#e6db74&#34;&gt;.iam.gserviceaccount.com&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --role &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;roles/storage.admin&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create a key for the service account&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud iam service-accounts keys create ~/terraform-key.json &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --iam-account terraform-sa@$PROJECT_ID.iam.gserviceaccount.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;Enable APIs: Ensure the following APIs are enabled:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Enable Kubernetes Engine API&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud services enable container.googleapis.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Enable Compute Engine API&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud services enable compute.googleapis.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Enable Cloud Storage API&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcloud services enable storage.googleapis.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;Credentials: Export Google Cloud credentials:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GOOGLE_APPLICATION_CREDENTIALS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/path/to/google-application-credentials.json&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;module-structure&#34;&gt;Module Structure&lt;/h2&gt;&#xA;&lt;h3 id=&#34;files&#34;&gt;Files&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;backend.tf&lt;/strong&gt;: Configures the backend to store Terraform state in a GCS bucket.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/openapi/setup-python-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/openapi/setup-python-server/</guid>
      <description>&lt;p&gt;Overview&#xA;The OpenAPI specification allows you to describe your API in a language-agnostic way. Using the OpenAPI Generator tool, you can generate server stubs in numerous programming languages. This guide shows you how to generate a server from an OpenAPI specification and run it locally, providing a quick starting point for developing your API backend.&lt;/p&gt;&#xA;&lt;p&gt;Prerequisites&#xA;Before you begin, ensure you have:&lt;/p&gt;&#xA;&lt;p&gt;An OpenAPI Specification (YAML or JSON): You need a valid OpenAPI document. For example, openapi.yaml.&#xA;OpenAPI Generator: Install the OpenAPI Generator CLI. For example, using Homebrew run brew install openapi-generator. Using npm run npm install @openapitools/openapi-generator-cli -g.&#xA;A Chosen Programming Language and Framework: Decide which language and framework you want to generate the server in (Java Spring, Node.js Express, Python Flask, Go Gin, etc.).&#xA;Step 1: Verify Your OpenAPI Specification&#xA;Validate your OpenAPI spec:&#xA;openapi-generator validate -i openapi.yaml&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/prompt-engineering/create-a-prompt-catalog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/prompt-engineering/create-a-prompt-catalog/</guid>
      <description>&lt;h1 id=&#34;setting-up-a-prompt-catalog-on-github-for-openai-assistant-requests&#34;&gt;Setting Up a Prompt Catalog on GitHub for OpenAI Assistant Requests&lt;/h1&gt;&#xA;&lt;p&gt;A &lt;strong&gt;Prompt Catalog&lt;/strong&gt; on GitHub allows you to centrally manage and version-control prompts for use with the OpenAI Assistant API. This guide walks through setting up a structured catalog in a GitHub repository.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;benefits-of-a-github-hosted-prompt-catalog&#34;&gt;Benefits of a GitHub-Hosted Prompt Catalog&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Centralized Management&lt;/strong&gt;: Keep all prompts in one repository.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Version Control&lt;/strong&gt;: Track changes to prompts over time.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Collaboration&lt;/strong&gt;: Easily share and collaborate on prompts with team members.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Automation&lt;/strong&gt;: Enable dynamic retrieval of prompts in applications or workflows.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;step-1-create-a-github-repository&#34;&gt;Step 1: Create a GitHub Repository&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create a new repository&lt;/strong&gt; on GitHub:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/prompt-engineering/create-a-prompt-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/prompt-engineering/create-a-prompt-service/</guid>
      <description>&lt;p&gt;Here’s a markdown document to describe setting up a Python-based service that uses a GitHub repository containing prompts to leverage when calling the OpenAI Assistant API:&lt;/p&gt;&#xA;&lt;p&gt;markdown&#xA;Copy code&lt;/p&gt;&#xA;&lt;h1 id=&#34;setting-up-a-python-based-service-for-openai-api-with-github-hosted-prompts&#34;&gt;Setting Up a Python-Based Service for OpenAI API with GitHub-Hosted Prompts&lt;/h1&gt;&#xA;&lt;p&gt;This guide walks through setting up a Python-based service that retrieves prompts from a GitHub repository and uses them to make calls to the OpenAI Assistant API.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Python Environment&lt;/strong&gt;: Ensure Python 3.8+ is installed.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;GitHub Repository&lt;/strong&gt;: A repository containing your prompt files in structured text (e.g., JSON, YAML, or plain text).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;OpenAI API Key&lt;/strong&gt;: Obtain an API key from &lt;a href=&#34;https://platform.openai.com/&#34;&gt;OpenAI&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Git Access&lt;/strong&gt;: Set up access (HTTPS/SSH) to clone the GitHub repository.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;step-1-create-a-github-repository-for-prompts&#34;&gt;Step 1: Create a GitHub Repository for Prompts&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a repository on GitHub to store your prompts.&lt;/li&gt;&#xA;&lt;li&gt;Organize prompts into a structured format:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Example: Store JSON files in a &lt;code&gt;/prompts&lt;/code&gt; directory.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example_prompt&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;An example prompt&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Write a detailed guide on {topic}.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Commit and push the changes:&#xA;bash&#xA;Copy code&#xA;git add .&#xA;git commit -m &amp;ldquo;Add initial prompts&amp;rdquo;&#xA;git push origin main&#xA;Step 2: Set Up the Python Service&#xA;2.1 Install Required Libraries&#xA;Set up a Python virtual environment and install dependencies:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/rancher/setting-up-rancher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/rancher/setting-up-rancher/</guid>
      <description>&lt;p&gt;Prerequisites&#xA;Google Cloud SDK (gcloud) installed and authenticated&#xA;kubectl installed and configured&#xA;Helm (v3+) installed&#xA;Ensure that you are logged into your Google Cloud account and have set the desired project and compute zone:&lt;/p&gt;&#xA;&lt;p&gt;bash&#xA;Copy code&#xA;gcloud auth login&#xA;gcloud config set project &amp;lt;YOUR_GCP_PROJECT_ID&amp;gt;&#xA;gcloud config set compute/zone &amp;lt;YOUR_COMPUTE_ZONE&amp;gt;&#xA;Step 1: Create a GKE Cluster&#xA;Create a GKE cluster with a sufficient number of nodes and appropriate machine types:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
