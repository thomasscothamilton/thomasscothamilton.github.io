<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Generation on Thomas-Scot Hamilton</title>
    <link>http://localhost:1313/tags/code-generation/</link>
    <description>Recent content in Code Generation on Thomas-Scot Hamilton</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/code-generation/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generating a Server from an OpenAPI Specification</title>
      <link>http://localhost:1313/posts/openapi/python-flask/</link>
      <pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/openapi/python-flask/</guid>
      <description>&lt;p&gt;Overview&#xA;The OpenAPI specification allows you to describe your API in a language-agnostic way. Using the OpenAPI Generator tool, you can generate server stubs in numerous programming languages. This guide shows you how to generate a server from an OpenAPI specification and run it locally, providing a quick starting point for developing your API backend.&lt;/p&gt;&#xA;&lt;p&gt;Prerequisites&#xA;Before you begin, ensure you have:&lt;/p&gt;&#xA;&lt;p&gt;An OpenAPI Specification (YAML or JSON): You need a valid OpenAPI document. For example, openapi.yaml.&#xA;OpenAPI Generator: Install the OpenAPI Generator CLI. For example, using Homebrew run brew install openapi-generator. Using npm run npm install @openapitools/openapi-generator-cli -g.&#xA;A Chosen Programming Language and Framework: Decide which language and framework you want to generate the server in (Java Spring, Node.js Express, Python Flask, Go Gin, etc.).&#xA;Step 1: Verify Your OpenAPI Specification&#xA;Validate your OpenAPI spec:&#xA;openapi-generator validate -i openapi.yaml&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
